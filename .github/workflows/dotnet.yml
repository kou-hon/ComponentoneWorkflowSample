# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    # 1. 前回実行日をartifactから取得
    - name: Download last_run_date artifact
      uses: actions/download-artifact@v4
      with:
        name: last_run_date
      continue-on-error: true

    # 2. 今日の日付取得
    - name: Get today's date
      id: get_date
      shell: pwsh
      run: |
        $date = Get-Date -Format "yyyy-MM-dd"
        echo "date=$date" >> $env:GITHUB_ENV

    # 3. 前回実行日と比較
    - name: Compare dates
      id: compare
      shell: pwsh
      run: |
        if (Test-Path .\last_run_date.txt) {
          $LAST_RUN_DATE = Get-Content .\last_run_date.txt
        } else {
          $LAST_RUN_DATE = ""
        }
        if ($LAST_RUN_DATE -eq $env:date) {
          echo "skip=true" >> $env:GITHUB_ENV
        } else {
          echo "skip=false" >> $env:GITHUB_ENV
        }

    # 4. ワークフローの本体
    - name: checkout
      if: env.skip == 'false'
      uses: actions/checkout@v4

    - name: Setup .NET
      if: env.skip == 'false'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: grape city licene manager install
      if: env.skip == 'false'
      run: dotnet tool install -g GrapeCity.LicenseManagerTool

    - name: gclm setting
      env:
        LICENSE_KEY: ${{ secrets.COMPONENTONEKEY }}
      if: env.skip == 'false'
      run: gclm "4327eaf8-aa02-40a6-b9f6-3d007c039055" -a "$env:LICENSE_KEY"

    - name: Restore dependencies
      if: env.skip == 'false'
      run: dotnet restore

    - name: Build
      if: env.skip == 'false'
      run: dotnet build --no-restore

    - name: Test
      if: env.skip == 'false'
      run: dotnet test --no-build --verbosity normal

    # 5. 日付ファイルをartifactとして保存
    - name: Save today's date as artifact
      if: env.skip == 'false'
      shell: pwsh
      run: |
        $env:date | Out-File -Encoding UTF8 -NoNewline last_run_date.txt

    - name: Upload last_run_date artifact
      if: env.skip == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: last_run_date
        path: last_run_date.txt

    - name: clean up
      if: ${{ always() }}
      run: gclm "4327eaf8-aa02-40a6-b9f6-3d007c039055" -d
